test account
Username: App.11@Quranicquizzes.com
Pass: V1kram

Teacher account:  teacher.1@quranicquizzes.com
Pass : V1kram

app.11 account is a student account now
app.2@quranicquizzes.com
app.3@quranicquizzes.com
app.4@quranicquizzes.com

wondercrazy15 Pwd to : NatriXDev@20


VisualStudio Login Credential
natrixdeveloper@hotmail.com
natrix2015


7dif17

Udemy
Id: mayurbhavsar45@gmail.com
pass : mayur@1234

App center
https://appcenter.ms/orgs/Quranic-Quizzes/applications
id : imcoder1805@hotmail.com
pass: Coder@1234

Here your Skype details 
imkpatel / !mkPatel@123

wondercrazy15@gmail.com
NatriXDev@20

heavendev0005@gmail.com
he@ven0005

Appl===
imcoder1511@gmail.com
n@tr!X2019

Android keystone
natrix@2018

Gmail 
imcoder1511@gmail.com
n@tr!x2019

qqpushapp@gmail.com
Pass: J@smine1

mayurbhavsar45@gmail.com
M@yur@06@2021
fqjn-jmqi-hcqr-meos

Github
USername:wondercrazy15	
Email: wondercrazy15@gmail.com
Password: natrix@2021

Username : wondercrazy15@gmail.com
Pwd: Natrix@2015



https://drive.google.com/file/d/1Lk2Ah4VjLbxEnFTDvWjLNVSorlwTbdRw/view?usp=sharing


Hello sir,â€¨Today I have done this task
-Testing of Notification 
-Resolve design issue of notification number show in menu
-App added in App Store for review(https://prnt.sc/rj0o3p)
-Added new App of QuranicQuizzes in play store
  
-Added Dhirajsons app in playstore



https://quranicquizzes.com/Quizzes/LearnApp/953?ak=9yT6MRqbdBYbEvQQ7tweG&iscourse=False

https://www.syncfusion.com/downloads/communitylicense

https://heartbeat.fritz.ai/firebase-cloud-messaging-for-remote-push-notifications-on-android-with-xamarin-3c72fffcd25

https://xamarinlatino.com/xamarin-forms-firebase-cloud-messaging-ios-setup-1961a91d4055





go to KeyChain Access,
Search for "GitHub",
then when then result "github.com" pops up, change the account or password to your new account, and save.
2:55
je btave ene delete kri deje
2:55
then set krje global.username and email
2:55
IT's work



Shweta:house_with_garden:  2:56 PM
all items
2:56
select kr
2:56
left side mathi bottom ma

seniorone@gmail.com
seniortwo@gmail.com
seniorthree@gmail.com

Github
wondercrazy15	natrix@2015	wondercrazy15@gmail.com

https://github.com/Jonathan-Denzel/easycare

test@gmail.com

jona.denz@web.de, pw: iPW7Bxv3S2EYHhP

1 530 130 184
nqf362

https://ej2.syncfusion.com/angular/documentation/appearance/icons/#available-icons


"https://easyapp-0624.azurewebsites.net/api/Supervisor/00000000-0000-0000-0000-000000000000


"/Users/imac/Library/Developer/CoreSimulator/Devices/BCF5B33C-21F8-4B62-9A2A-9AAE4A6CDD3B/data/Containers/Data/Application/A4AC440A-BF80-43B7-874B-91BA90903A4A/Documents/EasyCare/Untitled.rtf"

Today I have worked on Audio recording
=>Voice is recorded and play when user tap in button
=>Audio is store in our folder location
=>Working in both android and iOS



"/Users/imac/Library/Developer/CoreSimulator/Devices/BCF5B33C-21F8-4B62-9A2A-9AAE4A6CDD3B/data/Containers/Data/Application/C78E0289-6DA9-4737-AE1C-580A0C9BA1CF/Documents/EasyCare/Test"

{MSAL.Xamarin.iOS.4.16.1.0.MsalClientException: 
	ErrorCode: missing_entitlements
Microsoft.Identity.Client.MsalClientException: The application does not have keychain access groups enabled in the Entitlements.plist. As a result, there was a failure to save to the iOS keychain. The keychain access group 'CZS87T4HBG.com.microsoft.adalcache' is not enabled in the Entitlements.plist. Also, use the WithIosKeychainSecurityGroup api to set the keychain access group. See https://aka.ms/msal-net-enable-keychain-groups for more details on enabling keychain access groups and entitlements.


 Could not install the application '/Users/imac/Development/Live Project/EasyCare/easycare/Mobile/EasyCare.iOS/bin/iPhone/Debug/device-builds/iphone7.2-12.4.5/EasyCare.iOS.app' on the device 'Mayur???s iPhone (2)': Your code signing/provisioning profiles are not correctly configured. Probably you have an entitlement not supported by your current provisioning profile, or your device is not part of the current provisioning profile. Please check the iOS Device Log for details (error: 0xe8008016).


=>Change monitoring screen design
https://prnt.sc/uip3hq
=>Working on calendar attachment
https://prnt.sc/uiwzko
Getting error System.InvalidOperationException: AutomationId may only be set one time.
=>Now I stop my work because not feel well(Health not well)

=>Work on Nabuh App
Resolve issue of text is not responsive for all device


Today I have call Monthly event API and bind data
Resolve issue of add event
I have also uploaded new IPA 1.0.15



=>Need event edit api
All information of event from EventId(title,startdate,enddate,selectedmember.....)
=>Group profile pic and title change API

Today I have done calendar attachment
=>Send Calendar event in chat
https://prnt.sc/umgv60
=>Created design of Change Group icon
https://prnt.sc/umgvir

=>Also Nabuh App added in test flight with Logo 


=>Working on How to add data in SQLite database in flutter and navigation
=>User click on + open screen for add data after add data data will be insert in database
https://prnt.sc/uwlqj7
https://prnt.sc/uwlqd8

/Users/imac/Library/Developer/CoreSimulator/Devices/BF1D0ADF-945E-4E7C-A3AB-91D4896FDB64/data/Containers/Data/Application/954CABC2-4D65-4137-B386-FBC67505322A/DocumentsIPITRSDocument


I have Worked on Play/Pause/Resume Audio from URL in flutter
Working on Download File from URL and Play it.
https://prnt.sc/116ingj

getApplicationDocumentsDirectory


/data/user/0/com.flutter_demowebapp/app_flutter/Demo/Audio/file_example_MP3_700KB.mp3

/data/user/0/com.flutter_demowebapp/app_flutter/Demo/Audio/file_example_MP3_700KB.mp3



https://sso.agora.io/en/v2/signup
imcoder1511@gmail.com
Natrix@2021

c049cf70a49f4272a6c043c9f864be4b

const APP_ID = "ce27fc3f03f74f7b95682e152d047777";


Worked on Video call App
I have created a Simple app with the Same channel of user
https://prnt.sc/11bzwes
Working on Register user in Firebase and do Video call with them


=>Register user in Firebase datastore, Working on login and get data from Firebase
https://prnt.sc/11du29f
https://prnt.sc/11dtcmg

=>Worked on login register and display list of other user on Home page
Video=https://drive.google.com/file/d/1MDiPuGPVcOYqnuGrHBdXpZ7UvLkyDfDh/view?usp=sharing

=>In iOS facing issue of registration so working on that
 Unhandled Exception: [firebase_auth/internal-error] An internal error has occurred, print and inspect the error details for more information.
MethodChannelFirebaseAuth.createUserWithEmailAndPassword



AiyXkAFWW1P1JLJzo2tr2OTmuV43


i9qb5okMaaU5Fq0TlVxndPmyau83VZyCtnEHgVMyhjMaEpKtbSESHv62



import 'dart:async';
import 'package:agora_rtc_engine/rtc_engine.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:natapp/models/call.dart';
import 'package:natapp/provider/UserProvider.dart';
import 'package:natapp/resources/CallMethods.dart';
import 'package:natapp/src/utils/settings.dart';
import 'package:provider/provider.dart';

class CallScreen extends StatefulWidget {
  final Call call;

  CallScreen({
    @required this.call,
  });

  @override
  _CallScreenState createState() => _CallScreenState();
}

class _CallScreenState extends State<CallScreen> {
  final CallMethods callMethods = CallMethods();
  RtcEngine _engine;
  UserProvider userProvider;
  StreamSubscription callStreamSubscription;

  static final _users = <int>[];
  final _infoStrings = <String>[];
  bool muted = false;

  @override
  void initState() {
    super.initState();
    addPostFrameCallback();
    initializeAgora();
  }

  Future<void> initializeAgora() async {
    if (APP_ID.isEmpty) {
      setState(() {
        _infoStrings.add(
          'APP_ID missing, please provide your APP_ID in settings.dart',
        );
        _infoStrings.add('Agora Engine is not starting');
      });
      return;
    }

    await _initAgoraRtcEngine();
    _addAgoraEventHandlers();
    VideoEncoderConfiguration configuration = VideoEncoderConfiguration();
    configuration.dimensions = VideoDimensions(1920, 1080);
    await _engine.setVideoEncoderConfiguration(configuration);
    await _engine.joinChannel(Token, widget.call.channelId, null, 0);
  }



  addPostFrameCallback() {
    SchedulerBinding.instance.addPostFrameCallback((_) {
      userProvider = Provider.of<UserProvider>(context, listen: false);

      callStreamSubscription = callMethods
          .callStream(uid: userProvider.getUser.uid)
          .listen((DocumentSnapshot ds) {
        // defining the logic
        switch (ds.data) {
          case null:
            // snapshot is null which means that call is hanged and documents are deleted
            Navigator.pop(context);
            break;

          default:
            break;
        }
      });
    });
  }

  /// Create agora sdk instance and initialize
  Future<void> _initAgoraRtcEngine() async {
    _engine = await RtcEngine.create(APP_ID);
    await _engine.enableVideo();
    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting);
  }

  /// Add agora event handlers
  void _addAgoraEventHandlers() {
    _engine.setEventHandler(RtcEngineEventHandler(error: (code) {
      setState(() {
        final info = 'onError: $code';
        _infoStrings.add(info);
      });
    }, joinChannelSuccess: (channel, uid, elapsed) {
      setState(() {
        final info = 'onJoinChannel: $channel, uid: $uid';
        _infoStrings.add(info);
      });
    }, leaveChannel: (stats) {
      setState(() {
        _infoStrings.add('onLeaveChannel');
        _users.clear();
      });
    }, userJoined: (uid, elapsed) {
      setState(() {
        final info = 'userJoined: $uid';
        _infoStrings.add(info);
        _users.add(uid);
      });
    }, userOffline: (uid, elapsed) {
      setState(() {
        final info = 'userOffline: $uid';
        _infoStrings.add(info);
        _users.remove(uid);
      });
    }, firstRemoteVideoFrame: (uid, width, height, elapsed) {
      setState(() {
        final info = 'firstRemoteVideo: $uid ${width}x $height';
        _infoStrings.add(info);
      });
    }));
  }

  @override
  void dispose() {
    // clear users
    _users.clear();
    // destroy sdk
    _engine.leaveChannel();
    _engine.destroy();
    super.dispose();
  }

  /// Helper function to get list of native views
  List<Widget> _getRenderViews() {
    final List<StatefulWidget> list = [];
   // _users.forEach((int uid) => list.add(RtcRemoteView.SurfaceView(uid: uid)));
    return list;
  }

  /// Video view wrapper
  Widget _videoView(view) {
    return Expanded(child: Container(child: view));
  }

  /// Video view row wrapper
  Widget _expandedVideoRow(List<Widget> views) {
    final wrappedViews = views.map<Widget>(_videoView).toList();
    return Expanded(
      child: Row(
        children: wrappedViews,
      ),
    );
  }

  /// Video layout wrapper
  Widget _viewRows() {
    final views = _getRenderViews();
    switch (views.length) {
      case 1:
        return Container(
            child: Column(
              children: <Widget>[_videoView(views[0])],
            ));
      case 2:
        return Container(
            child: Column(
              children: <Widget>[
                _expandedVideoRow([views[0]]),
                _expandedVideoRow([views[1]])
              ],
            ));
      case 3:
        return Container(
            child: Column(
              children: <Widget>[
                _expandedVideoRow(views.sublist(0, 2)),
                _expandedVideoRow(views.sublist(2, 3))
              ],
            ));
      case 4:
        return Container(
            child: Column(
              children: <Widget>[
                _expandedVideoRow(views.sublist(0, 2)),
                _expandedVideoRow(views.sublist(2, 4))
              ],
            ));
      default:
    }
    return Container();
  }

  /// Toolbar layout
  Widget _toolbar() {
    return Container(
      alignment: Alignment.bottomCenter,
      padding: const EdgeInsets.symmetric(vertical: 48),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          RawMaterialButton(
            onPressed: _onToggleMute,
            child: Icon(
              muted ? Icons.mic_off : Icons.mic,
              color: muted ? Colors.white : Colors.blueAccent,
              size: 20.0,
            ),
            shape: CircleBorder(),
            elevation: 2.0,
            fillColor: muted ? Colors.blueAccent : Colors.white,
            padding: const EdgeInsets.all(12.0),
          ),
          RawMaterialButton(
            onPressed: () => _onCallEnd(context),
            child: Icon(
              Icons.call_end,
              color: Colors.white,
              size: 35.0,
            ),
            shape: CircleBorder(),
            elevation: 2.0,
            fillColor: Colors.redAccent,
            padding: const EdgeInsets.all(15.0),
          ),
          RawMaterialButton(
            onPressed: _onSwitchCamera,
            child: Icon(
              Icons.switch_camera,
              color: Colors.blueAccent,
              size: 20.0,
            ),
            shape: CircleBorder(),
            elevation: 2.0,
            fillColor: Colors.white,
            padding: const EdgeInsets.all(12.0),
          )
        ],
      ),
    );
  }

  /// Info panel to show logs
  Widget _panel() {
    return Container(
      padding: const EdgeInsets.symmetric(vertical: 48),
      alignment: Alignment.bottomCenter,
      child: FractionallySizedBox(
        heightFactor: 0.5,
        child: Container(
          padding: const EdgeInsets.symmetric(vertical: 48),
          child: ListView.builder(
            reverse: true,
            itemCount: _infoStrings.length,
            itemBuilder: (BuildContext context, int index) {
              if (_infoStrings.isEmpty) {
                return null;
              }
              return Padding(
                padding: const EdgeInsets.symmetric(
                  vertical: 3,
                  horizontal: 10,
                ),
                child: Row(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Flexible(
                      child: Container(
                        padding: const EdgeInsets.symmetric(
                          vertical: 2,
                          horizontal: 5,
                        ),
                        decoration: BoxDecoration(
                          color: Colors.yellowAccent,
                          borderRadius: BorderRadius.circular(5),
                        ),
                        child: Text(
                          _infoStrings[index],
                          style: TextStyle(color: Colors.blueGrey),
                        ),
                      ),
                    )
                  ],
                ),
              );
            },
          ),
        ),
      ),
    );
  }

  void _onCallEnd(BuildContext context) {
    Navigator.pop(context);
  }

  void _onToggleMute() {
    setState(() {
      muted = !muted;
    });
    _engine.muteLocalAudioStream(muted);
  }

  void _onSwitchCamera() {
    _engine.switchCamera();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        title: Text('Agora Video Call'),
      ),
      backgroundColor: Colors.black,
      body: Center(
        child: Stack(
          children: <Widget>[
            _viewRows(),
            //_panel(),
            _toolbar(),
          ],
        ),
      ),
    );
  }
}

I have check https://github.com/google/deepdream but there is no way to bind DeepDream algorithm with flutter.
=>For ImageProcessing need algorithm to process Image.

=>Resolved iOS issue,User register and login working in iOS.
=>Working on Send and Receive Video call in Flutter.
https://drive.google.com/file/d/1N3Eg8McBAaLxx7iMZHSJuyXvWTm6nKvA/view?usp=sharing

=>Search about deepdream new requirement of Flutter

=>Worked on login register and display list of other users on the Home page
Video=https://drive.google.com/file/d/1MDiPuGPVcOYqnuGrHBdXpZ7UvLkyDfDh/view?usp=sharing

=>In iOS facing the issue of registration so working on that
 Unhandled Exception: [firebase_auth/internal-error] An internal error has occurred, print and inspect the error details for more information.
MethodChannelFirebaseAuth.createUserWithEmailAndPassword


I have review the documentation any my Question is
I have to store all information in Firebase or you will provide API?
I have to create web and Mobile Application both In flutter or web in other technology?

There is three Users right?
=>Super Admin
=>Admin Users
=>Delivery Associates(DA) users

=>Mobile app functionality for Admin Users and Delivery Associates(DA)right?


I have read requirement of flutter and ask question to client for that.
I have chat with Sony for Xamarin project.
I have continue Video call demo
=>In this getting null when call current user.
=>For that Need to verify email so I have complete verify email flow.
https://prnt.sc/11p8seq

HorizontalStepper(
                      steps: [
                        HorizontalStep(
                          title: "",
                          widget: Center(
                            child: Text("1"),
                          ),
                          state: HorizontalStepState.SELECTED,
                          isValid: true,
                        ),
                        HorizontalStep(
                          title: "",
                          widget: Center(
                            child: Text("2"),
                          ),
                          isValid: true,
                        ),
                        HorizontalStep(
                          title: "",
                          widget: Center(
                            child: Text("3"),
                          ),
                          isValid: true,
                        ),

                      ],
                      selectedColor: themeGreen,
                      unSelectedColor: Colors.white,
                      leftBtnColor: const Color(0xffEA7F8B),
                      rightBtnColor: const Color(0xFF4FE2C0),
                      selectedOuterCircleColor: themeGreen,
                      type: Type.TOP,
                      circleRadius: 30,
                      onComplete: () {
                        print("completed");
                      },
                      textStyle: TextStyle(
                        fontSize: 14,
                        fontWeight: FontWeight.bold,
                        decoration: null,
                      ))



Hello ma'am,
Today I have complete Design of Registration flow, Working on validation.
Video: https://drive.google.com/file/d/1mHhxY14Q-ra9d5QdKD7sk5pN05KwlI1g/view?usp=sharing
TH: 08:00

























return Container(
      child: Column(
        children: <Widget>[
          SizedBox(
            height: 60,
          ),
          getSwitcher(context, "Internal Messege", "Yes", "No", InternalMessegeYes, InternalMessegeNo,
            () {
              setState(() {
                if (InternalMessegeYes == null) {
                  InternalMessegeYes = btnStyle;
                  InternalMessegeNo = null;
                  isMessege=true;
                }
              });
            },
            () {
              setState(() {
                if (InternalMessegeNo == null) {
                  InternalMessegeNo = btnStyle;
                  InternalMessegeYes = null;
                  isMessege=false;
                }
              });
            },
          ),
          SizedBox(
            height: 20,
          ),
          getSwitcher(context, "Push Notification", "Yes", "No", NotificationYes, NotificationNo,
                () {
              setState(() {
                if (NotificationYes == null) {
                  NotificationYes = btnStyle;
                  NotificationNo = null;
                  isNotification=true;
                }
              });
            },
                () {
              setState(() {
                if (NotificationNo == null) {
                  NotificationNo = btnStyle;
                  NotificationYes = null;
                  isNotification=false;
                }
              });
            },
          ),
          SizedBox(
            height: 20,
          ),
          getSwitcher(context, "Email", "Yes", "No", EmailYes, EmailNo,
                () {
              setState(() {
                if (EmailYes == null) {
                  EmailYes = btnStyle;
                  EmailNo = null;
                  isEmail=true;
                }
              });
            },
                () {
              setState(() {
                if (EmailNo == null) {
                  EmailNo = btnStyle;
                  EmailYes = null;
                  isEmail=false;
                }
              });
            },
          ),
          SizedBox(
            height: 20,
          ),
          getSwitcher(context, "SMS", "Yes", "No", SMSYes, SMSNo,
                () {
              setState(() {
                if (SMSYes == null) {
                  SMSYes = btnStyle;
                  SMSNo = null;
                  isSMS=true;
                }
              });
            },
                () {
              setState(() {
                if (SMSNo == null) {
                  SMSNo = btnStyle;
                  SMSYes = null;
                  isSMS=false;
                }
              });
            },
          ),
          SizedBox(
            height: 20,
          ),
          getSwitcher(context, "Phone Call", "Yes", "No", CallYes, CallNo,
                () {
              setState(() {
                if (CallYes == null) {
                  CallYes = btnStyle;
                  CallNo = null;
                  isCall=true;
                }
              });
            },
                () {
              setState(() {
                if (CallNo == null) {
                  CallNo = btnStyle;
                  CallYes = null;
                  isCall=false;
                }
              });
            },
          ),
          SizedBox(
            height: 20,
          ),
          getThemeTextField(context, txtPromoCode, "Promo Code", TextInputType.text, false, focusNode, TextInputAction.done,null),

          Container(
            margin: EdgeInsets.only(left: 0, bottom: 54),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.start,
              children: <Widget>[
                Theme(
                  data: ThemeData(unselectedWidgetColor: Colors.white,),
                  child: Checkbox(
                    value: isAgree,
                    activeColor: themeWhite,
                    checkColor: themeBlue,
                    onChanged: (value){
                      isAgree = value;
                      setState(() {

                      });
                    },
                  ),
                ),
                GestureDetector(
                  child: Container(
                    child: Text(
                      "I agree with all terms and conditions.",
                      style: GoogleFonts.openSans(
                          color: themeWhite,
                          fontSize: 15
                      ),
                    ),
                  ),
                  onTap: (){
                    showToast("Terms & Conditions");
//                                          Navigator.pop(context, "Pop");
//                                      stopSession(channel);
//                                      Navigator.push(context, MaterialPageRoute(
//                                        builder: (context)=>TermsAndConditionView()
//                                      ));
                  },
                )
              ],
            ),
          ),
          Padding(
            padding: EdgeInsets.only(left: 15, right: 15),
            child: Row(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Expanded(
                  child: getThemeButton("Back", themeGreen, context, true, () {
                    setState(() {
                      currentStep--;
                      widget.function(currentStep);
                    });
                  }),
                ),
                SizedBox(
                  width: 5,
                ),
                Expanded(
                  child: getThemeButton(
                      "Confirm", themeGreen, context, true, () {
                    if(!isAgree){
                    showToast("Please agree to vbet Terms & Conditions");
                    return;
                    }else{
                      var username=widget.mapInfo["username"];
                      var first_name=widget.mapInfo["first_name"];
                      var last_name=widget.mapInfo["last_name"];
                      var email=widget.mapInfo["email"];
                      var password=widget.mapInfo["password"];
                      var currency_name=widget.mapInfo["currency_name"];
                      var birth_date=widget.mapInfo["birth_date"];
                      var zip_code=widget.mapInfo["zip_code"];
                      var city=widget.mapInfo["city"];
                      var address=widget.mapInfo["address"];
                      var mobile_phone=widget.mapInfo["Phone_code"]+widget.mapInfo["mobile_phone"];
                      var max_daily_bet_amount=widget.mapInfo["max_daily_bet_amount"];
                      var max_weekly_bet_amount=widget.mapInfo["max_weekly_bet_amount"];
                      var max_monthly_bet_amount=widget.mapInfo["max_monthly_bet_amount"];
                      var country=widget.mapInfo["country"];
                      var country_code=widget.mapInfo["country_code"];
                      var Phone_code=widget.mapInfo["Phone_code"];
                      var gender=widget.mapInfo["gender"];
                      var promoCode=txtPromoCode.text;

                      RegisterUserRequest userInfo = RegisterUserRequest(
                          username,
                          password,
                          first_name,
                          last_name,
                          gender,
                          birth_date,
                          "eng",
                          max_monthly_bet_amount,
                          max_daily_bet_amount,
                          address,
                          city,
                          country_code,
                          email,
                          currency_name,
                          promoCode,
                          zip_code,
                          mobile_phone,
                          (isEmail)?isEmail:null,
                        (isSMS)?isSMS:null,
                          null
                      );
                      RegisterRequest registerRequest = RegisterRequest(cmdRegisterUser+cmdId, cmdRegisterUser,
                          RegisterRequestParams(userInfo));
                      String json = jsonEncode(registerRequest);
                      print(json);
                      isLoading = true;
                      setState(() {

                      });
                      channel.sink.add(json);
                    }
                  }),
                )
              ],
            ),
          ),
          Container(
            margin: EdgeInsets.only(bottom: 30, top: 13),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Container(
                  child: GestureDetector(
                    child: Text(
                      "Already have an account? Sign in",
                      style: GoogleFonts.openSans(color: themeWhite),
                    ),
                    onTap: () async {
                      var result = await Navigator.push(context,
                          MaterialPageRoute(builder: (context) => LoginView()));
                    },
                  ),
                )
              ],
            ),
          ),
        ],
      ),
    );




{"code":0,"rid":"register_user8485","data":{"result":"-1000","result_text":"InternalError","details":"Error processing your request"}}

{"code":0,"rid":"register_user8485","data":{"result":"-2099","result_text":"WrongInputParameters","details":{"Key":"WrongInputParameters","Message":"Input parameters are wrong","ErrorData":{}}}}

{"code":0,"rid":"register_user8485","data":{"result":"-1118","result_text":"DuplicateLogin","details":{"Key":"DuplicateLogin","Message":"Duplicate login","ErrorData":{}}}}


{"rid":"register_user8485","command":"register_user","params":{"user_info":{"username":"Testharsh4","password":"123456789","first_name":"test4","last_name":"harsh4","gender":"M","birth_date":"1996-01-01","lang_code":"eng","max_bet_amount":"5000","max_daily_bet_amount":"200","address":"Test","city":"Surat","country_code":"GB","email":"testharsh4@gmail.com","currency_name":"GBP","promo_code":"","zip_code":"123","mobile_phone":"+449632587456","subscribe_to_email":true,"subscribe_to_sms":true,"subscribe_to_bonus":null}}}
When I pass birthdate that time getting error in response.


Today I have try to call API but getting error in that
{"code":0,"rid":"register_user8485","data":{"result":"-2099","result_text":"WrongInputParameters","details":{"Key":"WrongInputParameters","Message":"Input parameters are wrong","ErrorData":{}}}}

if there is error in registration then if I add same record then give me error.
{"code":0,"rid":"register_user8485","data":{"result":"-1118","result_text":"DuplicateLogin","details":{"Key":"DuplicateLogin","Message":"Duplicate login","ErrorData":{}}}}




I have set validation and get all data in last page
Working on API call but facing error so working on it.

Also I have attend Client Call for flutter requirement.


I have to add blocked and Unblock feature in the backend service?


I have read Client requirement and send message to him

=>Filtering objectionable material
First need to review code after I will add this message it's take hardly 15 minute to add.

=>Reporting offensive content
=For this need to check existing feature like you have to add me in friend list so I will show your uploaded images in Memz
=After that image we will add report feature on that Means other user will add like spam and all.
=If you want to show that that is available in Instagram
ScreenShot:https://prnt.sc/11wqo0l
=It's take 8-10 hour because I have to check existing feature and after that I have to test properly.

=>Block abusive users
=I have to add blocked and Unblock feature in the backend service or you will provide?
=This Feature take time because first we have to add new field in database for Block or Unblock and according that we have to change in UI.
=For this take take 15-17 hours

For all Changes First I have to review your code and flow.
=>3-4 Days I will complete your Initial work of Phase One

=>Also I have read another requirement from Mayur sir.

=> Work with demo video call app to pickup screen

=>I have set pickup screen of VideoCall app
https://prnt.sc/11yk23w

return ListView.builder(
          itemCount: myModel.album.,
            itemBuilder: (context, index) => {
              return(
            ListTile(title: Text("${myModel.album.data.title}"),)
            }

        );

